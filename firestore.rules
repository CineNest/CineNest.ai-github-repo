/**
 * @fileoverview Firestore Security Rules for CineFlow AI.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for all data stored
 * under the `/users/{userId}` path. Only the authenticated user matching the
 * `userId` path segment has read and write access to their own data.
 *
 * Data Structure:
 * All user-specific data is stored under the `/users/{userId}` collection.
 *
 * Key Security Decisions:
 * - User listing is explicitly disallowed to protect user privacy.
 * - Data validation is relaxed in this prototyping phase to allow for rapid
 *   schema iteration, with the exception of critical ownership checks on `create` and `update`.
 * - Denormalization is not required because the data structure inherently supports Authorization Independence.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces user-ownership for all documents in the /users/{userId} collection.
     * @path /users/{userId}
     * @allow (create) - Authenticated user 'user_abc' can create their profile at /users/user_abc if the 'id' field matches.
     * @allow (get, update, delete) - Authenticated user 'user_abc' can read, update, and delete their profile at /users/user_abc.
     * @deny (create) - Authenticated user 'user_xyz' cannot create a profile at /users/user_abc.
     * @deny (get, update, delete) - Authenticated user 'user_xyz' cannot read, update, or delete the profile at /users/user_abc.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId} {
      // Helper function to check if the authenticated user is the owner of the document.
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }

      // Helper function to check if the authenticated user is the owner of the existing document.
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Allow a user to create their own profile if the userId matches their auth.uid.
      allow create: if isOwner(userId) && request.resource.data.id == userId;

      // Allow a user to get their own profile.
      allow get: if isOwner(userId);

      // Allow a user to list their own profile.
      allow list: if false;

      // Allow a user to update their own profile if they are the owner.  Enforce immutability of the 'id' field.
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;

      // Allow a user to delete their own profile if they are the owner.
      allow delete: if isExistingOwner(userId);
    }
  }
}